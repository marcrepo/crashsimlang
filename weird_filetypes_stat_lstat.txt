Weird Filetypes (stat()/lstat())
================================

# Find stat or lsat system call for a regular file where the the pathname that was not previoulsy an argument to an open system call.

# Note that the open (and openat) system call always follows the symlink unless
# O_NOFOLLOW or O_EXCL | O_CREAT specified
# so the $fd (file descriptor) given to fstat will be the actual file (not the link)
# 
# This current test may not be useful as changing the fstat to a link in this context
# may not make sense - perhaps replace fstat with lstat instead? It is also not clear
# what to code for the recognizer.


Preamble
========
lstat($pathname, stat{..., st_mode=$stat_mode, ...}) = $lstat_return_value ->

    lstat[$stat_mode & S_IFMT == S_IFREG, $lstat_return_value == 0])($pathname, $stat_mode)

stat($pathname, stat{..., st_mode=$stat_mode, ...}) = $stat_return_value ->

    stat[$mode & S_IFREG == 0, $stat_return_value == 0])($pathname, $stat_mode)

open($pathname, ...) = $fd ->

    open[$fd>=0]($pathname, $fd)

openat(..., $pathname, flags=O_RDONLY) = $fd ->
    openat[$fd>=0]($pathname,$fd)




Inspector/Trigger
=================
.*;
~(open[T](?pathname,?fd); | openat[T](?pathname,?fd);)

(~close[T](!fd);)*

(stat[T,T](!pathname, ?stat_mode) | (lstat[T,T](!pathname, ?stat_mode))
.*;




Mutator
=======
(stat[T,T](!pathname, st_mode=!stat_mode & S_IFLINK)) | 
    (lstat[T,T](!pathname, st_mode=!stat_mode & S_IFLINK))
